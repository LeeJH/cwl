cwlVersion: v1.0
class: CommandLineTool

arguments:
  - valueFrom: "-Arg"
  - valueFrom: "-Arg2"

inputs:
  str:
    type: string
    default: foo
    inputBinding:
      prefix: "-str"

  nil:
    type: "string?"
    inputBinding:
      prefix: "-Null"

  # TODO cwltool acts very strangely when these complex types
  #      start getting mixed together
  arrparam:
    inputBinding:
      prefix: "-Zarr"
      itemSeparator: ","
    type:
      type: array
      items: string
      inputBinding:
        position: -1000

  arrrec:
    inputBinding:
      prefix: "-Zrec"
      itemSeparator: ","
    type:
      type: array
      items:
        type: record
        fields:
          recA:
            type: string
            inputBinding:
              prefix: "-rz"

  fp:
    type: File
    inputBinding:
      prefix: "-fp"

  fpnil:
    type: File?
    inputBinding:
      prefix: "-FPNIL"
  flag:
    type: boolean
    inputBinding:
      prefix: "-off"

  onflag:
    type: boolean
    inputBinding:
      prefix: "-on"

  zdependent_parameters:
    #inputBinding: {}
    type:
      type: record
      fields:
        itemA:
          type: string
          inputBinding:
            position: 0
            prefix: -A
        itemB:
          type: string
          inputBinding:
            prefix: -B
  exclusive_parameters:
    #inputBinding: {}
    #inputBinding:
      #prefix: -Z
      #position: 100
      #itemSeparator: ","
      # TODO this overrides the record type below
      #valueFrom: "foo"
    type:
      - type: record
        fields:
          itemC:
            type: string
            inputBinding:
              prefix: -C
      - type: record
        fields:
          itemD:
            type: string
            inputBinding:
              prefix: -D
outputs: []
baseCommand: echo


#$ cwl-runner record.cwl record-job1.yml
#Workflow error:
#  Error validating input record, could not validate field `dependent_parameters` because
#  missing required field `itemB`
#
#dependent_parameters:
#  itemA: one
#  itemB: two
#exclusive_parameters:
#  itemC: three
#  itemD: four
#
#$ cwl-runner record.cwl record-job2.yml
#[job 140566927111376] /home/example$ echo -A one -B two -C three
#-A one -B two -C three
#Final process status is success
#{}
#
#
#dependent_parameters:
#  itemA: one
#  itemB: two
#exclusive_parameters:
#  itemD: four
#
#$ cwl-runner record.cwl record-job3.yml
#[job 140606932172880] /home/example$ echo -A one -B two -D four
#-A one -B two -D four
#Final process status is success
#{}
